version: '3.8'

services:
  # Calendar application
  calendar_app:
    build:
      context: .
      dockerfile: build/calendar/Dockerfile
    ports:
      - ${HTTP_PORT}:8080
      - ${GRPC_PORT}:50051
    depends_on:
      calendar_pg:
        condition: service_healthy

  # Scheduler application
  scheduler_app:
    build:
      context: .
      dockerfile: build/scheduler/Dockerfile
    depends_on:
      calendar_pg:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # Sender application
  sender_app:
    build:
      context: .
      dockerfile: build/sender/Dockerfile
    depends_on:
      calendar_pg:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # Calendar database
  calendar_pg:
    image: postgres:14-alpine3.17
    environment:
      - POSTGRES_DB=${PG_DATABASE}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
    ports:
      - ${PG_PORT_LOCAL}:${PG_PORT}
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5


  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    ports:
      - ${RABBITMQ_PORT}:5672 # AMQP port for client connections
      - ${RABBITMQ_PANEL_PORT}:15672 # Management web interface port
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status"]
      interval: 10s
      timeout: 5s
      retries: 5
      
volumes:
  postgres:
    driver: local
  redis:
    driver: local
